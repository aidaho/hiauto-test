# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "migrations",
]

# Same as Black.
line-length = 150
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["ALL"]#["A", "DJ", "E", "F", "W", "C901"]
ignore = [
       "ANN002",  # missing *args type annotations
       "ANN003",  # missing *kwargs type annotations
       "ANN401",  # using Any annotation
       "C901",  # func too complex
       "C417",  # using map
       "COM819",  # trailing comma in tuples
       "D101",  # missing docstring in pub class
       "D102",  # missing docstring in pub method
       "D105",  # missing docstring in magic method
       "D107",  # missing docstring in __init__
       "E731",  # assigning lambda to var instead of func definition
       "ERA001",  # commented out code
       "Q000",  # single vs double quotes
       "S105",  # suspected hardcoded tokens
       "S311",  # using random (in crypto-related context)
       "SIM102",  # using nested if
       "SLF001",  # accessing private members
       "PERF401",  # using append loop instead of comprehension (10% difference)
       "PLR2004",  # require constants instead of magic values
       "PLR0913",  # too many func arguments
       "PTH123",  # using open()
       "S101",  # using assert
       "T201",  # using print
       "TC003",  # using import for type-annotations only
       "TC004",  # import is used not only for annotations (false positives)
       "TRY300",  # consider using try..else
       "UP009",  # using -*- coding: utf-8 -*-
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"